{"version":3,"file":"list.js","sources":["../../src/js/plugins/list.js"],"sourcesContent":["import BaseComponent from 'bootstrap/js/src/base-component.js'\n\nimport SelectorEngine from 'bootstrap/js/src/dom/selector-engine'\nimport EventHandler from 'bootstrap/js/src/dom/event-handler'\n\nconst NAME = 'list'\nconst DATA_KEY = 'bs.list'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_CLICK = `click${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_ACTIVE = 'active'\n\nconst SELECTOR_LIST = '[data-bs-list-checkbox]' //'.it-list'\nconst SELECTOR_ITEM_CHECKBOX = 'input[type=checkbox]'\n\nclass List extends BaseComponent {\n  constructor(element) {\n    super(element)\n\n    this._init()\n  }\n\n  // Getters\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggleCheckbox(item) {\n    const input = SelectorEngine.findOne('input', item)\n    if (input) {\n      if (input.checked) {\n        input.checked = false\n        item.classList.remove(CLASS_NAME_ACTIVE)\n      } else {\n        input.checked = true\n        item.classList.add(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  // Private\n  _init() {\n    this._initCheckbox()\n  }\n  _initCheckbox() {\n    SelectorEngine.find(SELECTOR_ITEM_CHECKBOX, this._element).forEach((item) => {\n      EventHandler.on(item.closest('a'), EVENT_CLICK, (evt) => {\n        evt.preventDefault()\n        this.toggleCheckbox(item.closest('a'))\n      })\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nSelectorEngine.find(SELECTOR_LIST).forEach((list) => {\n  SelectorEngine.find(SELECTOR_ITEM_CHECKBOX, list).forEach((checkbox) => {\n    EventHandler.one(checkbox.closest('a'), EVENT_CLICK_DATA_API, (evt) => {\n      if (!List.getInstance(list)) {\n        evt.preventDefault()\n        const listObj = List.getOrCreateInstance(list)\n        listObj.toggleCheckbox(evt.currentTarget)\n      }\n    })\n  })\n})\n\nexport default List\n"],"names":[],"mappings":";;;;AAKA,MAAM,IAAI,GAAG;AACb,MAAM,QAAQ,GAAG;AACjB,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC;AAC/B,MAAM,YAAY,GAAG;;AAErB,MAAM,WAAW,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;AACtC,MAAM,oBAAoB,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC;;AAE9D,MAAM,iBAAiB,GAAG;;AAE1B,MAAM,aAAa,GAAG,0BAAyB;AAC/C,MAAM,sBAAsB,GAAG;;AAE/B,MAAM,IAAI,SAAS,aAAa,CAAC;AACjC,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,KAAK,CAAC,OAAO;;AAEjB,IAAI,IAAI,CAAC,KAAK;AACd;;AAEA;;AAEA,EAAE,WAAW,IAAI,GAAG;AACpB,IAAI,OAAO;AACX;;AAEA;AACA,EAAE,cAAc,CAAC,IAAI,EAAE;AACvB,IAAI,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI;AACtD,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,IAAI,KAAK,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,OAAO,GAAG;AACxB,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB;AAC/C,OAAO,MAAM;AACb,QAAQ,KAAK,CAAC,OAAO,GAAG;AACxB,QAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB;AAC5C;AACA;AACA;;AAEA;AACA,EAAE,KAAK,GAAG;AACV,IAAI,IAAI,CAAC,aAAa;AACtB;AACA,EAAE,aAAa,GAAG;AAClB,IAAI,cAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AACjF,MAAM,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,WAAW,EAAE,CAAC,GAAG,KAAK;AAC/D,QAAQ,GAAG,CAAC,cAAc;AAC1B,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AAC7C,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AACrD,EAAE,cAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK;AAC1E,IAAI,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,oBAAoB,EAAE,CAAC,GAAG,KAAK;AAC3E,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;AACnC,QAAQ,GAAG,CAAC,cAAc;AAC1B,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI;AACrD,QAAQ,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa;AAChD;AACA,KAAK;AACL,GAAG;AACH,CAAC;;;;"}