version: 2

defaults: &defaults
  working_directory: &working_directory ~/repo
  restore_cache: &restore_cache
    keys:
      - v5-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "package.json" }}
      # fallback to using the latest cache if no exact match is found
      - v5-dependencies-
  ruby: &ruby
    name: Ruby dependencies
    command: bundle install
  node: &node
    name: npm dependencies
    command: npm install
  save_cache: &save_cache
    paths:
      - vendor/bundle
      - node_modules
    key: v5-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "package.json" }}
  tag_filters: &tag_filters
    branches:
      ignore: /.*/
    tags:
      only: /^v?[0-9]+(\.[0-9]+)*/
  docker:
    - image: circleci/ruby:2.6.0-node
      environment:
        BUNDLER_VERSION: 2.0.1
        BUNDLE_PATH: vendor/bundle
        JEKYLL_ENV: production

jobs:
  build:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Check versions
          command: |
            ruby --version
            bundle --version
            node --version
            npm --version
            docker --version

      # Download and cache dependencies
      - restore_cache: *restore_cache
      - run: *ruby
      - run: *node
      - save_cache: *save_cache

      - run:
          name: Build
          command: |
            npm run build

      # Persist the specified paths (workspace/echo-output) into the workspace
      # for use in downstream job. Must be an absolute path, or relative path
      # from working_directory. This is a directory on the container which is
      # taken to be the root directory of the workspace.
      - persist_to_workspace:
          root: *working_directory
          paths:
            - dist
            - docs/assets/dist

  github-update-pages:
    <<: *defaults

    steps:
      - add_ssh_keys:
          fingerprints:
            # Fingerprint comes from a key that is published here:
            # https://github.com/italia/bootstrap-italia/settings/keys and
            # https://circleci.com/gh/italia/bootstrap-italia/edit#ssh
            # Details can be found here:
            # https://circleci.com/docs/1.0/adding-read-write-deployment-key/ (no 2.0 docs yet)
            # https://circleci.com/docs/2.0/configuration-reference/#add_ssh_keys
            - "87:c6:c6:36:29:03:76:61:38:32:ea:fc:07:89:94:fa"
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      # Restore dependencies
      - restore_cache: *restore_cache

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Check versions
          command: |
            ruby --version
            bundle --version
            node --version
            npm --version
            docker --version

      - run: *ruby

      - run:
          name: Update GitHub Pages
          command: |
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            npm run documentation-deploy-to-gh-pages

  github-create-release:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      # Restore dependencies
      - restore_cache: *restore_cache
      - run: *node

      - run:
          name: Create GitHub Release
          command: |
            sh ./scripts/create-release-attachment.sh
            npm run release

  npm-publish:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      - run:
          name: NPM publish
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish

# Workflows enable multiple jobs in parallel
workflows:
  version: 2

  deploy:
    jobs:
      - build:
          # Note: The build job must also have a filters tags section, as it is a transient dependency of the deploy job.
          filters:
            branches:
              ignore: gh-pages
            tags:
              only: /.*/

      - github-update-pages:
          requires:
            - build
          filters: *tag_filters

      - github-create-release:
          requires:
            - build
          filters: *tag_filters

      - npm-publish:
          requires:
            - build
          filters: *tag_filters
