//
// Base styles
//

.btn {
  --#{$prefix}btn-spacing-inset-x: var(--#{$prefix}spacing-m);
  --#{$prefix}btn-spacing-inset-y: var(--#{$prefix}spacing-xs);
  --#{$prefix}btn-font-family: var(--#{$prefix}font-sans);
  --#{$prefix}btn-font-weight: var(--#{$prefix}font-weight-solid);
  --#{$prefix}btn-line-height: var(--#{$prefix}line-height-base);
  --#{$prefix}btn-text-color: var(--#{$prefix}color-text-primary);
  --#{$prefix}btn-background: transparent; // default to transparent
  --#{$prefix}btn-border-size: 0; // default to 0
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-border-radius: var(--#{$prefix}radius-smooth);
  --#{$prefix}btn-outline-border-size: 2px;
  --#{$prefix}btn-outline-border-color: transparent;
  --#{$prefix}btn-disabled-opacity: 0.5;
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), 0.5);

  display: inline-block;
  padding: var(--#{$prefix}btn-spacing-inset-y) var(--#{$prefix}btn-spacing-inset-x);
  border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);
  border-radius: var(--#{$prefix}btn-border-radius);
  background: var(--#{$prefix}btn-background);
  box-shadow: var(--#{$prefix}btn-box-shadow, none);
  color: var(--#{$prefix}btn-text-color);
  font-family: var(--#{$prefix}btn-font-family);
  font-size: var(--#{$prefix}button-font-size);
  font-weight: var(--#{$prefix}btn-font-weight);
  line-height: var(--#{$prefix}btn-line-height);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  white-space: initial;
  width: auto;
  // @include box-shadow(var(--#{$prefix}btn-box-shadow));
  transition: all var(--#{$prefix}transition-instant) ease-in-out;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;

  // &:hover {
  //   // border-color: var(--#{$prefix}btn-hover-border-color);
  //   // background-color: var(--#{$prefix}btn-hover-bg);
  //   // color: var(--#{$prefix}btn-hover-color);
  //   // text-decoration: if($link-hover-decoration == underline, none, null);
  // }

  &:disabled,
  &.disabled {
    opacity: var(--#{$prefix}btn-disabled-opacity);
    cursor: not-allowed;
    pointer-events: none;
  }

  // .btn-check + &:hover {
  //   border-color: var(--#{$prefix}btn-border-color);
  //   background-color: var(--#{$prefix}btn-background);
  //   // override for the checkbox/radio buttons
  //   color: var(--#{$prefix}btn-text-color);
  // }

  &:focus-visible {
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    color: var(--#{$prefix}btn-hover-color);
    @include gradient-bg(var(--#{$prefix}btn-hover-bg));
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:focus-visible + & {
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:checked + &,
  :not(.btn-check) + &:active,
  &:first-child:active,
  &.active,
  &.show {
    border-color: var(--#{$prefix}btn-active-border-color);
    background-color: var(--#{$prefix}btn-active-bg);
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    color: var(--#{$prefix}btn-active-color);
    @include box-shadow(var(--#{$prefix}btn-active-shadow));

    &:focus-visible {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
      } @else {
        box-shadow: var(--#{$prefix}btn-focus-box-shadow);
      }
    }
  }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  --#{$prefix}btn-background: transparent;
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};
  --#{$prefix}btn-disabled-border-color: transparent;
  --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix(color-contrast($primary), $primary, 15%))};

  text-decoration: $link-decoration;
  @if $enable-gradients {
    background-image: none;
  }

  &:hover,
  &:focus-visible {
    text-decoration: underline;
  }

  &:focus-visible {
    color: var(--#{$prefix}btn-text-color);
  }

  &:hover {
    color: var(--#{$prefix}btn-hover-color);
  }
}

//
// Button Sizes
//

.btn-me {
  margin-right: $v-gap * 1.5 !important;
}

.btn-xs,
.btn-sm,
.btn-lg {
  border-radius: $btn-border-radius;
}

.btn-xs {
  padding: 12px 16px;
  font-size: $btn-font-size-xs;
  line-height: $input-btn-line-height-xs;
}

.btn-sm {
  padding: 12px 24px;
  font-size: $btn-font-size-sm;
  line-height: $input-btn-line-height-sm;
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}

.btn-lg {
  padding: 16px 24px;
  font-size: $btn-font-size-lg;
  line-height: $input-btn-line-height-lg;
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-progress {
  position: relative;
}

.btn-icon {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  .rounded-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5em;
    height: 1.5em;
    background-color: $white;
    @include border-radius(12px);

    @each $color, $value in $theme-colors {
      &.rounded-#{$color} {
        background-color: $value;
      }
    }

    .icon {
      margin-right: 0;
    }

    & + * {
      margin-left: 0.5em;
    }
  }

  .icon {

    width: 1.2em;
    height: 1.2em;
    border: none;

    & + * {
      margin-left: 0.25em;
    }
  }
}

.btn-full {
  // allow height 100%
  align-self: stretch;
  // height: 100%;
  width: inherit;
  margin-top: -$header-slim-button-v-padding;
  margin-right: -$header-slim-button-v-padding;
  margin-bottom: -$header-slim-button-v-padding;
  padding-right: 8px;
  padding-left: 8px;
  border: none;
  box-shadow: none;
  line-height: 1.555;
  @include border-radius(0);

  // Tablet vertical
  @include media-breakpoint-up(sm) {
    padding: 16px;
  }

  // Desktop
  @include media-breakpoint-up(lg) {
    display: flex;
    flex: 1;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin: 0;
    padding: 12px 24px !important;
  }
  &:hover {
    text-decoration: none !important;
  }
}

.btn:disabled:hover,
.btn.disabled:hover {
  cursor: not-allowed;
}

.btn-primary {
  --#{$prefix}btn-text-color: var(--#{$prefix}color-text-inverse);
  --#{$prefix}btn-background: var(--#{$prefix}color-background-primary);

  &:hover {
    --#{$prefix}btn-background: var(--#{$prefix}color-background-primary-hover);
  }

  &:active {
  --#{$prefix}btn-background: var(--#{$prefix}color-background-primary-active);
  }

  &.btn-progress {
    border-color: hsl(210, 76%, 67%); // UI kit - missing token
    opacity: 1;
    background-color: hsl(210, 76%, 67%); // UI kit - missing token
  }
}

.btn-secondary {
  --#{$prefix}btn-text-color: var(--#{$prefix}color-text-inverse);
  --#{$prefix}btn-background: var(--#{$prefix}color-background-secondary);

  &:hover {
    --#{$prefix}btn-background: var(--#{$prefix}color-background-secondary-hover);
  }

  &:active {
  --#{$prefix}btn-background: var(--#{$prefix}color-background-secondary-active);
  }

  &:disabled,
  &.disabled {
    //progress bar button
    &.btn-progress {
      border-color: hsl(210, 12%, 52%); // UI kit - missing tokens
      opacity: 1;
      background-color: hsl(210, 12%, 52%); // UI kit - missing tokens
    }
  }
}

.btn-success {
  --#{$prefix}btn-text-color: var(--#{$prefix}color-text-inverse);
  --#{$prefix}btn-background: var(--#{$prefix}color-background-success);

  &:hover {
    --#{$prefix}btn-background: var(--#{$prefix}color-background-success-hover);
  }

  &:active {
  --#{$prefix}btn-background: var(--#{$prefix}color-background-success-active);
  }
}

.btn-warning {
  --#{$prefix}btn-text-color: var(--#{$prefix}color-text-inverse);
  --#{$prefix}btn-background: var(--#{$prefix}color-background-warning);

  &:hover {
    --#{$prefix}btn-background: var(--#{$prefix}color-background-warning-hover);
  }

  &:active {
  --#{$prefix}btn-background: var(--#{$prefix}color-background-warning-active);
  }
}

.btn-danger {
  --#{$prefix}btn-text-color: var(--#{$prefix}color-text-inverse);
  --#{$prefix}btn-background: var(--#{$prefix}color-background-danger);

  &:hover {
    --#{$prefix}btn-background: var(--#{$prefix}color-background-danger-hover);
  }

  &:active {
  --#{$prefix}btn-background: var(--#{$prefix}color-background-danger-active);
  }
}

// Button Outline
//

.btn[class*="btn-outline-"] {
  --#{$prefix}btn-box-shadow: inset 0 0 0 var(--#{$prefix}btn-outline-border-size) var(--#{$prefix}btn-outline-border-color);
}

.btn-outline { 
  // Outline Primary
  &-primary {
    --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-primary);
    --#{$prefix}btn-text-color: var(--#{$prefix}color-text-primary);
    &:hover {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-primary-hover); 
      --#{$prefix}btn-text-color: var(--#{$prefix}color-link-hover);
    }
    &:active {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-primary-active); 
      --#{$prefix}btn-text-color: var(--#{$prefix}color-link-active);
    }
  }

  // Outline Secondary
  &-secondary {
    --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-secondary);
    --#{$prefix}btn-text-color: var(--#{$prefix}color-text-secondary);

    &:hover {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-secondary-hover); 
      --#{$prefix}btn-text-color: var(--#{$prefix}color-text-secondary-hover);
    }
    &:active {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-secondary-active);
      --#{$prefix}btn-text-color: var(--#{$prefix}color-text-secondary-active); 
    }
  }

  // Outline Success
  &-success {
    --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-success);
    --#{$prefix}btn-text-color: var(--#{$prefix}color-text-success);

    &:hover {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-success-hover); 
      --#{$prefix}btn-text-color: var(--#{$prefix}color-text-success-hover);
    }
    &:active {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-success-active);
      --#{$prefix}btn-text-color: var(--#{$prefix}color-text-success-active);
    }
  }

  // Outline Warning
  &-warning {
    --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-warning);
    --#{$prefix}btn-text-color: var(--#{$prefix}color-text-warning);

    &:hover {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-warning-hover); 
      --#{$prefix}btn-text-color: var(--#{$prefix}color-text-warning-hover);
    }
    &:active {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-warning-active); 
      --#{$prefix}btn-text-color: var(--#{$prefix}color-text-warning-active);
    }
  }

  // Outline Danger
  &-danger {
    --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-danger);
    --#{$prefix}btn-text-color: var(--#{$prefix}color-text-danger);

    &:hover {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-danger-hover); 
      --#{$prefix}btn-text-color: var(--#{$prefix}color-text-danger-hover);
    }
    &:active {
      --#{$prefix}btn-outline-border-color: var(--#{$prefix}color-border-danger-active); 
     --#{$prefix}btn-text-color: var(--#{$prefix}color-text-danger-active);
    }
  }
}

.bg-dark {
  .btn-link {
    --#{$prefix}btn-text-color: var(--#{$prefix}color-text-inverse);
    text-decoration: underline;
  }
  .btn-outline-primary {
    box-shadow: inset 0 0 0 2px $white;
    @include button-outline-variant($white, color-hover($white), transparent, color-hover($white));
    &:hover {
      box-shadow: inset 0 0 0 2px color-hover($white);
    }
  }
  .btn-outline-secondary {
    @include button-outline-variant($white, color-hover($white), transparent, color-hover($white));
  }
}

// Transparent background and border properties included for button version.
// iOS requires the button element instead of an anchor tag.
// If you want the anchor version, it requires `href="#"`.
// See https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

.btn-close {
  position: relative;
  box-sizing: content-box;
  width: $btn-close-width;
  height: $btn-close-height;
  padding: $btn-close-padding-y $btn-close-padding-x;
  border: 0; // for button elements
  opacity: $btn-close-opacity;
  background: transparent escape-svg($btn-close-bg) center / $btn-close-width auto no-repeat; // include transparent for button elements
  background-color: transparent;
  color: var(--#{$prefix}color-text-base);
  @include border-radius();
  .icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  // Override <a>'s hover style
  &:hover {
    opacity: $btn-close-hover-opacity;
    color: $btn-close-color;
    text-decoration: none;
  }

  &:focus {
    outline: 0;
    opacity: $btn-close-focus-opacity;
    box-shadow: $btn-close-focus-shadow;
  }

  &:disabled,
  &.disabled {
    opacity: $btn-close-disabled-opacity;
    pointer-events: none;
    user-select: none;
  }
}

.btn-close-white {
  filter: $btn-close-white-filter;
}
