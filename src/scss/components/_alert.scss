// CSS Custom Properties
.alert {
  --#{$prefix}alert-color-background: var(--#{$prefix}color-background-inverse);
  --#{$prefix}alert-color-border: var(--#{$prefix}color-border-secondary);
  --#{$prefix}alert-color-text: var(--#{$prefix}color-text-base);
  --#{$prefix}alert-color-heading: var(--#{$prefix}color-text-base);
  --#{$prefix}alert-icon-spacing: var(--#{$prefix}icon-spacing);
  --#{$prefix}alert-sizing-border: 0.5rem;
  --#{$prefix}alert-spacing-inset: var(--#{$prefix}spacing-inset-s);
  --#{$prefix}alert-spacing-inset-extra: var(--#{$prefix}spacing-16x); // TODO: replace with semantic token
  --#{$prefix}alert-spacing-outside: var(--#{$prefix}spacing-stack-m);
}

// Base styles
.alert {
  position: relative;
  padding: var(--#{$prefix}alert-spacing-inset);
  margin-bottom: var(--#{$prefix}alert-margin);
  border: 1px solid var(--#{$prefix}alert-color-border);
  background-color: var(--#{$prefix}alert-color-background);
  color: var(--#{$prefix}alert-color-text);

  @include media-breakpoint-up(lg) {
    --#{$prefix}alert-spacing-inset: var(-#{$prefix}spacing-inset-m);
    padding-left: var(--#{$prefix}alert-spacing-inset);
  }
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: var(--#{$prefix}alert-color-heading);
}

// // Manage the space between alert paragraphs
// .alert-text {
//   margin-bottom: 0;
//   & + & {
//     margin-top: var(--#{$prefix}alert-spacing-inset);
//   }
// }

.alert-icon {
  margin-right: var(--#{$prefix}alert-icon-spacing);
}

// Provide class for links that match alerts
.alert-link {
  font-weight: var(--#{$prefix}font-weight-solid);
}

// Dismissible alerts
// Expand the right padding and account for the close button's positioning.
.alert-dismissible {
  padding-right: var(--#{$prefix}alert-spacing-inset);
  // Adjust close link position
  .btn-close {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    padding: var(--#{$prefix}alert-spacing-inset);
    color: inherit;
  }
}

// Alternate styles
// Generate contextual modifier classes for colorizing the alert.
// Loop through theme colors to generate contextual modifier classes for colorizing the alert
@each $type, $value in $status {
  @if index(('danger', 'warning', 'success', 'info', 'primary'), $type) {
    .alert-#{$type} {
      border-left: var(--#{$prefix}alert-sizing-border) solid #{$value};
    }

    .alert-#{$type} .alert-icon {
      fill: #{$value};
    }
  }
}
